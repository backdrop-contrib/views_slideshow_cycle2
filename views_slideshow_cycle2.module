<?php
/**
 * @file
 * Integrates the Cycle2 jQuery plugin with the Views Slideshow module.
 */

/**
 * Implements hook_libraries_info().
 */
function views_slideshow_cycle2_libraries_info() {
  $libraries['jquery.cycle2'] = array(
    'name' => 'Cycle2',
    'vendor url' => 'http://jquery.malsup.com/cycle2/',
    'download url' => 'http://jquery.malsup.com/cycle2/download/',
    'version arguments' => array(
      'file' => 'jquery.cycle2.js',
      'pattern' => '/ver.*? ([a-z0-9\-\.]+)/i',
      'lines' => 5,
    ),
    'files' => array(
      'js' => array('jquery.cycle2.js'),
    ),
    'variants' => array(
      'minified' => array(
        'version arguments' => array(
          'file' => 'jquery.cycle2.min.js',
        ),
        'files' => array(
          'js' => array('jquery.cycle2.min.js'),
        ),
        'variant callback' => '_views_slideshow_cycle2_detect_minified',
      ),
    ),
  );

  return $libraries;
}

/**
 * Determine if the minified variant of the Cycle2 library is available.
 *
 * Variant callback for views_slideshow_cycle2_libraries_info().
 */
function _views_slideshow_cycle2_detect_minified($library) {
  $library_path = libraries_get_path($library['machine name']);

  return file_exists($library_path . '/jquery.cycle2.min.js');
}

/**
 * Implements hook_libraries_info_alter().
 *
 * Add additional plugins to the library, and get any effects provided by those
 * plugins.
 */
function views_slideshow_cycle2_libraries_info_alter(&$libraries) {
  $effects = _views_slideshow_cycle2_get_plugin_effects();
  $transition_plugins = _views_slideshow_cycle2_transition_plugins();

  // Remove old effects.
  config_set('views_slideshow_cycle2.settings', 'views_slideshow_cycle2_plugin_effects', array());

  // Look for optional plugins.
  $plugins = file_scan_directory(libraries_get_path('jquery.cycle2'), '/jquery\.cycle2\..*?\.js/');
  foreach ($plugins as $plugin) {
    if ($plugin->filename !== 'jquery.cycle2.min.js') {
      // Add plugin to library.
      $libraries['jquery.cycle2']['files']['js'][$plugin->filename] = array('weight' => 1);
      $libraries['jquery.cycle2']['variants']['minified']['files']['js'][$plugin->filename] = array('weight' => 1);

      // Get any transition effects.
      $filename_parts = explode('.', $plugin->filename);
      $plugin_name = $filename_parts[2];
      if (!empty($transition_plugins[$plugin_name])) {
        foreach ($transition_plugins[$plugin_name] as $effect) {
          $effects[$effect] = $plugin->uri;
        }
      }
    }
  }

  // Save new effects.
  config_set('views_slideshow_cycle2.settings', 'views_slideshow_cycle2_plugin_effects', serialize($effects));
}

/**
 * Load plugin effects.
 *
 * @return array
 *   An associative array of plugin effects, where they keys are effect names
 *   and the values are URIs of the effect's plugin.
 */
function _views_slideshow_cycle2_get_plugin_effects() {
  $effects = config_get('views_slideshow_cycle2.settings', 'views_slideshow_cycle2_plugin_effects');
  if (is_string($effects)) {
    $effects = unserialize($effects);
  }

  return $effects;
}

/**
 * Get supported transition plugins.
 *
 * @return array
 *   An associative array of supported transition plugins, where the keys are
 *   plugin names (based off the filename: e.g. 'jquery.cycle2.[NAME](.min).js')
 *   and the values are arrays of the effects that plugin provides.
 */
function _views_slideshow_cycle2_transition_plugins() {
  return array(
    'carousel' => array(
      'carousel',
    ),
    'flip' => array(
      'flipHorz',
      'flipVert',
    ),
    'scrollVert' => array(
      'scrollVert',
    ),
    'shuffle' => array(
      'shuffle',
    ),
    'tile' => array(
      'tileSlide',
      'tileBlind',
    ),
  );
}

function _views_slideshow_cycle2_load_js($module_path = null, $settings = array()) {
  if (empty($module_path)) {
    $module_path = backdrop_get_path('module', 'views_slideshow_cycle2');
  }

  if (!empty($settings)) {
    backdrop_add_js(array('viewsSlideshowCycle2' => $settings), 'setting');
  }

  backdrop_add_js($module_path . '/js/views_slideshow_cycle2.js');

  $cycle2 = libraries_detect('jquery.cycle2');

  if ($cycle2['installed'] || _views_slideshow_cycle2_detect_minified($cycle2)) {
    if (!$cycle2['installed']) {
      $cycle2 = libraries_load('jquery.cycle2', 'minified');
    }

    if ($load = libraries_load_files($cycle2)) {
      foreach ($settings as $options) {
        _views_slideshow_cycle2_load_effect_plugin($options['effect']);
      }
    }

    return $load;
  } else {
    // Cycle2 is missing entirely.
    // TODO: Make loud noises
    return false;
  }
}

/**
 * Check if an effect is provided by a plugin, and load it if so.
 */
function _views_slideshow_cycle2_load_effect_plugin($effect) {
    $plugin_effects = _views_slideshow_cycle2_get_plugin_effects();

    if (isset($plugin_effects[$effect])) {
      backdrop_add_js($plugin_effects[$effect]);
    }
}

/**
 * Implements hook_theme().
 */
function views_slideshow_cycle2_theme($existing, $type, $theme, $path) {
  return array(
    'views_slideshow_cycle2' => array(
      'variables' => array('view' => NULL, 'settings' => array(), 'rows' => array(), 'title' => ''),
      'template' => 'theme/views-slideshow-cycle2',
      'file' => 'theme/views_slideshow_cycle2.theme.inc',
      'pattern' => 'views_slideshow_cycle2__',
    ),
    'views_slideshow_cycle2_main_frame' => array(
      'variables' => array('vss_id' => NULL, 'view' => NULL, 'settings' => NULL, 'rows' => NULL),
      'template' => 'theme/views-slideshow-cycle2-main-frame',
      'pattern' => 'views_slideshow_cycle2_main_frame__',
    ),
    'views_slideshow_cycle2_main_frame_row' => array(
      'variables' => array('vss_id' => NULL, 'items' => NULL, 'count' => NULL, 'view' => NULL),
      'template' => 'theme/views-slideshow-cycle2-main-frame-row',
      'pattern' => 'views_slideshow_cycle2_main_frame_row__',
    ),
    'views_slideshow_cycle2_main_frame_row_item' => array(
      'variables' => array('item' => NULL, 'item_count' => NULL, 'count' => NULL, 'view' => NULL),
      'template' => 'theme/views-slideshow-cycle2-main-frame-row-item',
      'views_slideshow_cycle2_main_frame_row_item__',
    ),
  );
}

/**
 * Need to have preprocess functions here because drupal doesn't cache them
 * correctly in the theme.inc file.
 *
 * If you would like to override the preprocess functions make sure to look at
 * the associated function in theme.inc.
 */

// Trying to make sure the theme.inc get's loaded.
include_once('theme/views_slideshow_cycle2.theme.inc');

function template_preprocess_views_slideshow_cycle2_main_frame(&$vars) {
  _views_slideshow_cycle2_preprocess_views_slideshow_cycle2_main_frame($vars);
}

function template_preprocess_views_slideshow_cycle2_main_frame_row(&$vars) {
  _views_slideshow_cycle2_preprocess_views_slideshow_cycle2_main_frame_row($vars);
}

function template_preprocess_views_slideshow_cycle2_main_frame_row_item(&$vars) {
  _views_slideshow_cycle2_preprocess_views_slideshow_cycle2_main_frame_row_item($vars);
}


/**
 * Implements hook_config_info().
 */
function views_slideshow_cycle2_config_info() {
  $prefixes['views_slideshow_cycle2.settings'] = array(
    'label' => t('Views Slideshow Cycle 2 settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

